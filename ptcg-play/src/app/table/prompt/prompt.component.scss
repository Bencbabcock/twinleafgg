@import '../../../theme/variables.scss';

.ptcg-prompt-overlay {
  will-change: opacity, visibility;
  bottom: 0;
  display: none;
  left: 0;
  opacity: 0;
  position: absolute;
  right: 0;
  top: 0;
  transition: opacity 0.3s ease-in-out;

  &.active {
    display: block;
    opacity: .6;
  }

  &.fullscreen-overlay {
    opacity: 0 !important;
    position: fixed;
    z-index: 999;
  }
}

.ptcg-prompt-container-wrapper {
  align-items: center;
  bottom: 0;
  display: flex;
  left: 0;
  justify-content: center;
  overflow: hidden;
  position: absolute;
  right: 0;
  top: 0;
  z-index: 2;

  &.fullscreen-prompt {
    padding: 0;
    position: fixed;
    z-index: 1000;
    width: 100vw;
    height: 100vh;
    overflow: hidden;
    will-change: opacity, transform;

    .ptcg-prompt-container {
      width: 100%;
      height: 100%;
      max-width: 100%;
      padding: 0;
      margin: 0;
      border-radius: 0;
      position: relative;
      will-change: opacity, transform;
    }
  }
}

.ptcg-prompt-container {
  display: block;
  margin: 0 auto;
  max-width: calc(100% - 2 * #{map-get($padding, normal)});
  padding: $ptcg-prompt-padding;
  border-radius: $ptcg-prompt-border-radius;
  box-sizing: border-box;
  overflow: hidden;
  outline: 0;
  position: absolute;

  &.choose-cards-container {
    width: 100%;
    height: 100%;
    max-width: 100%;
    padding: 0;
    margin: 0;
    border-radius: 0;
    background: #1b202be3 !important;
  }
}

// Global override for Material Dialog background
// ::ng-deep {
//   .ptcg-prompt-container.choose-cards-container {

//     .mat-dialog-container,
//     .mdc-dialog__container,
//     .mdc-dialog__surface,
//     .mat-mdc-dialog-surface {
//       background: transparent !important;
//       box-shadow: none !important;
//     }
//   }
// }

.ptcg-prompt-card-preview {
  position: absolute;
  width: map-get($ptcg-size, card);
}

.ptcg-prompt-title {
  margin: 0 0 map-get($padding, normal);
  display: flex;
}

.ptcg-prompt-title>h2 {
  align-self: center;
}

.ptcg-prompt-content {
  display: block;
  margin: 0 $ptcg-prompt-padding * -1;
  padding: 0 $ptcg-prompt-padding;
  max-height: $ptcg-prompt-max-height;
  overflow: auto;
  -webkit-overflow-scrolling: touch;

  .fullscreen-prompt & {
    height: calc(100vh - 120px);
    max-height: none;
  }
}

.ptcg-damage-prompt-content {
  display: block;
  margin: 0 $ptcg-prompt-padding * -1;
  padding: 0 $ptcg-prompt-padding;
  max-height: 30%;
  overflow: auto;
  -webkit-overflow-scrolling: touch;
}

.ptcg-prompt-actions {
  padding: 8px 0;
  display: flex;
  flex-wrap: wrap;
  min-height: 52px;
  align-items: center;
  justify-content: flex-end;
  margin-bottom: -$ptcg-prompt-padding;

  .mat-button-base+.mat-button-base,
  .mat-mdc-button-base+.mat-mdc-button-base {
    margin-left: $ptcg-prompt-button-margin;
  }

  .fullscreen-prompt & {
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    background-color: rgba(11, 43, 77, 0.8);
    padding: 12px 24px;
    margin: 0;
    z-index: 1001;
  }
}

.ptcg-minimized-prompt {
  bottom: map-get($padding, large);
  left: map-get($padding, large);
  position: absolute;
  z-index: 2;

  button {
    transition: all 0.15s cubic-bezier(0, 0, 0.2, 1);
    transform-origin: center center;
    will-change: transform, box-shadow;
    box-shadow: 0 3px 5px -1px rgba(0, 0, 0, .2), 0 6px 10px 0 rgba(0, 0, 0, .14), 0 1px 18px 0 rgba(0, 0, 0, .12);

    &:hover {
      transform: scale(1.05);
      box-shadow: 0 5px 10px -2px rgba(0, 0, 0, .2), 0 8px 12px 1px rgba(0, 0, 0, .14), 0 2px 20px 0 rgba(0, 0, 0, .12);
    }

    &:active {
      transform: scale(0.95);
    }

    .mat-icon {
      transition: transform 0.15s cubic-bezier(0, 0, 0.2, 1);
    }

    &:hover .mat-icon {
      transform: translateY(-1px);
    }
  }

  // Animate when prompt transitions from minimized to visible
  &.ng-enter {
    opacity: 0;
    transform: scale(0.7);
    animation: minimizedButtonEnter 150ms cubic-bezier(0, 0, 0.2, 1) forwards;
  }

  // No animation when prompt transitions from visible to minimized
  &.ng-leave {
    opacity: 0;
    transform: scale(0.7);
    animation: none;
  }
}

@keyframes minimizedButtonEnter {
  from {
    opacity: 0;
    transform: scale(0.7);
  }

  to {
    opacity: 1;
    transform: scale(1);
  }
}